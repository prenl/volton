{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "description": "API Documentation for all endpoints",
        "version": "1.0.0"
    },
    "paths": {
        "/api/batteries": {
            "get": {
                "tags": [
                    "Battery"
                ],
                "summary": "Get list of batteries",
                "operationId": "9f776a1fa642a73aa5223cab6b1acc35",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Number of records per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort field",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "brand",
                        "in": "query",
                        "description": "Filter by brand",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "description": "Filter by model",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Filter by size",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "weight",
                        "in": "query",
                        "description": "Filter by weight",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "capacity",
                        "in": "query",
                        "description": "Filter by capacity",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "voltage",
                        "in": "query",
                        "description": "Filter by voltage",
                        "required": false,
                        "schema": {
                            "type": "numeric"
                        }
                    },
                    {
                        "name": "price_from",
                        "in": "query",
                        "description": "Filter by minimum price",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "price_to",
                        "in": "query",
                        "description": "Filter by maximum price",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "stock",
                        "in": "query",
                        "description": "Filter by stock availability",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Battery"
                ],
                "summary": "Store a new battery",
                "operationId": "9ef1bffaaf4473a28975ae74122481a7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "brand": {
                                        "type": "string",
                                        "example": "Duracell"
                                    },
                                    "model": {
                                        "type": "string",
                                        "example": "AA"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "High power battery"
                                    },
                                    "capacity": {
                                        "type": "integer",
                                        "example": 2500
                                    },
                                    "voltage": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1.5
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Alkaline"
                                    },
                                    "size": {
                                        "type": "string",
                                        "example": "AA"
                                    },
                                    "weight": {
                                        "type": "string",
                                        "example": "23g"
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "stock": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Battery created"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/batteries/{id}": {
            "get": {
                "tags": [
                    "Battery"
                ],
                "summary": "Get a battery by ID",
                "operationId": "791cb04709bdd503977352814df47205",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Battery ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Battery details"
                    },
                    "404": {
                        "description": "Battery not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Battery"
                ],
                "summary": "Update an existing battery",
                "operationId": "5cba14dc3b97b0d61453ea333ef79057",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Battery ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "brand": {
                                        "type": "string",
                                        "example": "Duracell"
                                    },
                                    "model": {
                                        "type": "string",
                                        "example": "AA"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "High power battery"
                                    },
                                    "capacity": {
                                        "type": "integer",
                                        "example": 2500
                                    },
                                    "voltage": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1.5
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Alkaline"
                                    },
                                    "size": {
                                        "type": "string",
                                        "example": "AA"
                                    },
                                    "weight": {
                                        "type": "string",
                                        "example": "23g"
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "stock": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Battery updated"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Battery not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Battery"
                ],
                "summary": "Delete a battery",
                "operationId": "7914c22c1cb8e8ee63f199b167497838",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Battery ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Battery deleted"
                    },
                    "404": {
                        "description": "Battery not found"
                    },
                    "500": {
                        "description": "Error deleting battery"
                    }
                }
            }
        },
        "/api/admin/customers": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Get all customers",
                "description": "Get all customers",
                "operationId": "getCustomers",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by name or phone",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by name or phone",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_desc",
                        "in": "query",
                        "description": "Order descending",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "page": {
                                                    "type": "integer"
                                                },
                                                "page_size": {
                                                    "type": "integer"
                                                },
                                                "total_pages": {
                                                    "type": "integer"
                                                },
                                                "total_records": {
                                                    "type": "integer"
                                                },
                                                "customers": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Create a new customer",
                "operationId": "d85e55da104884a4328f9cc7cff9e9b6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer created successfully."
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/customers/{id}": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Get customer details",
                "operationId": "dd9806b5fdcd612aa8a0813e26d11e02",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer retrieved successfully."
                                        },
                                        "data": {}
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Customer"
                ],
                "summary": "Update a customer",
                "operationId": "e0bdf13463acafa3c7a74d16c65415c1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer updated successfully."
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Customer"
                ],
                "summary": "Delete a customer",
                "operationId": "dbbb9474ad4a3b35c00e9bf270243acf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Battery",
            "description": "Battery related endpoints"
        },
        {
            "name": "Customer",
            "description": "Customer related endpoints"
        }
    ]
}